axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
}
lapply(names(sentiment_list), plot)
library(ggpubr)
filenames <- c("Matrix_recommendations_2013.txt", "Matrix_recommendations_2018.txt")
sentiment_list <- list()
for (i in filenames) {
s <- read_file(i)
text_df <- tibble(text = s)
word_tokens_df <- unnest_tokens(text_df, word_tokens,  text, token = "words")
df <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
df$word_tokens <- removeNumbers(df$word_tokens)
df$word_tokens <-  removePunctuation(df$word_tokens)
df <- df %>% filter(word_tokens != "")
for (s in c("nrc", "afinn", "bing")) {
df <- df %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
}
sentiment_list <- append(sentiment_list, list(df))
}
names(sentiment_list) <- c("Comments About China in 2013", "Comments About China in 2018") # Define names of df's
##using sentiment list in the function in order to allow for automatic title changing
plot <- function(df){
ggplot(data = sentiment_list[[df]] %>% filter(!is.na(bing))) +
geom_histogram(aes(bing, fill = bing), stat = "count") +
scale_x_discrete(guide= guide_axis(angle = 45)) +
labs(title = df) +
theme(legend.title = element_blank(),
axis.title.x = element_blank()) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
}
ggarrange(lapply(names(sentiment_list), plot))
filenames <- c("Matrix_recommendations_2013.txt", "Matrix_recommendations_2018.txt")
sentiment_list <- list()
for (i in filenames) {
s <- read_file(i)
text_df <- tibble(text = s)
word_tokens_df <- unnest_tokens(text_df, word_tokens,  text, token = "words")
df <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
df$word_tokens <- removeNumbers(df$word_tokens)
df$word_tokens <-  removePunctuation(df$word_tokens)
df <- df %>% filter(word_tokens != "")
for (s in c("nrc", "afinn", "bing")) {
df <- df %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
}
sentiment_list <- append(sentiment_list, list(df))
}
names(sentiment_list) <- c("Comments About China in 2013", "Comments About China in 2018") # Define names of df's
##using sentiment list in the function in order to allow for automatic title changing
plot <- function(df){
ggplot(data = sentiment_list[[df]] %>% filter(!is.na(bing))) +
geom_histogram(aes(bing, fill = bing), stat = "count") +
scale_x_discrete(guide= guide_axis(angle = 45)) +
labs(title = df) +
theme(legend.title = element_blank(),
axis.title.x = element_blank()) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
}
lapply(names(sentiment_list), plot)
filenames <- c("Matrix_recommendations_2013.txt", "Matrix_recommendations_2018.txt")
sentiment_list <- list()
for (i in filenames) {
s <- read_file(i)
text_df <- tibble(text = s)
word_tokens_df <- unnest_tokens(text_df, word_tokens,  text, token = "words")
df <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
df$word_tokens <- removeNumbers(df$word_tokens)
df$word_tokens <-  removePunctuation(df$word_tokens)
df <- df %>% filter(word_tokens != "")
for (s in c("nrc", "afinn", "bing")) {
df <- df %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
}
sentiment_list <- append(sentiment_list, list(df))
}
names(sentiment_list) <- c("Comments About China in 2013", "Comments About China in 2018") # Define names of df's
##using sentiment list in the function in order to allow for automatic title changing
plot <- function(df){
ggplot(data = sentiment_list[[df]] %>% filter(!is.na(bing))) +
geom_histogram(aes(bing, fill = bing), stat = "count") +
scale_x_discrete(guide= guide_axis(angle = 45)) +
labs(title = df) +
theme_minimal()+
theme(legend.title = element_blank(),
axis.title.x = element_blank()) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
}
lapply(names(sentiment_list), plot)
plots <- lapply(names(sentiment_list), plot)
View(plots)
library(plotly)
ggplotly(plots)
ggplotly(plots[1])
unlist(plots)
ggarrange(unlist(plots))
View(plots)
lapply(names(sentiment_list), plot)
![image](plots/comments_about_china_2018.png)
?file.path
images <- file.path(tempdir(), "comments_about_china_2013.png")
file.copy("comments_about_china_2013.png", images, overwrite = TRUE)
images <- file.path("comments_about_china_2013.png")
file.copy("comments_about_china_2013.png", images, overwrite = TRUE)
images <- file.path("C:/Users/nico/Desktop/Harris/Winter 2021/Data Programming II/Fortunato-Frisbie-final-project/plots/comments_about_china_2013.png")
file.copy("comments_about_china_2013.png", images, overwrite = TRUE)
img="comments_about_china_2013.png"
View(sentiment_list)
unlist(sentiment_list)
list2env(sentiment_list,.GlobalEnv)
View(`Comments About China in 2013`)
names(sentiment_list) <- c("comments_china_2013", "comments_china_2018") # Define names of df's
list2env(sentiment_list,.GlobalEnv)
comments_china_2013 %>%
filter(!is.na(bing)) %>%
ggplot()  +
geom_histogram(aes(bing, fill = bing), stat = "count") +
scale_x_discrete(guide= guide_axis(angle = 45)) +
labs(title = df) +
theme(legend.title = element_blank(),
axis.title.x = element_blank()) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
comments_china_2013 %>%
filter(!is.na(bing)) %>%
ggplot()  +
geom_histogram(aes(bing, fill = bing), stat = "count") +
scale_x_discrete(guide= guide_axis(angle = 45)) +
labs(title = "comments_china_2013") +
theme(legend.title = element_blank(),
axis.title.x = element_blank()) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
filenames <- c("Matrix_recommendations_2013.txt", "Matrix_recommendations_2018.txt")
sentiment_list <- list()
for (i in filenames) {
s <- read_file(i)
text_df <- tibble(text = s)
word_tokens_df <- unnest_tokens(text_df, word_tokens,  text, token = "words")
df <- anti_join(word_tokens_df, stop_words, by = c("word_tokens" = "word"))
df$word_tokens <- removeNumbers(df$word_tokens)
df$word_tokens <-  removePunctuation(df$word_tokens)
df <- df %>% filter(word_tokens != "")
for (s in c("nrc", "afinn", "bing")) {
df <- df %>%
left_join(get_sentiments(s), by = c("word_tokens" = "word")) %>%
plyr::rename(replace = c(sentiment = s, value = s), warn_missing = FALSE)
}
sentiment_list <- append(sentiment_list, list(df))
}
names(sentiment_list) <- c("comments_china_2013", "comments_china_2018") # Define names of df's
list2env(sentiment_list,.GlobalEnv)
plot_5 <- comments_china_2013 %>%
filter(!is.na(bing)) %>%
ggplot()  +
geom_histogram(aes(bing, fill = bing), stat = "count") +
scale_x_discrete(guide= guide_axis(angle = 45)) +
labs(title = "Comments about China in 2013") +
theme_minimal() +
theme(legend.title = element_blank(),
axis.title.x = element_blank()) +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplotly(plot_5)
library(tidyverse)
library(stargazer)
library(mFilter)
library(plm)
library(lmtest)
library(fuzzyjoin)
install.packages("mFilter")
install.packages("plm")
install.packages("lmtest")
install.packages("fuzzyjoin")
joint_support_scores <- read_csv("joint_support_scores.csv")
debt_database <- read_csv("HRT_ChinaDebtStockDatabase.csv", col_names = TRUE)
debt_database <- debt_database %>% select(1:7)
hp <- debt_database %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
objectList <- list(debt_hp$x,debt_hp$trend,debt_hp$cycle)
hp <- as.data.frame(do.call(cbind, objectList))
names(hp) <- c("ChinaDebt_GDP","trend","cycle")
hp$year <- 2000:2017
hp %>%
ggplot(aes(x=year)) +
geom_line(aes(y = ChinaDebt_GDP)) +
geom_line(aes(y = trend), color = "red") +
geom_line(aes(y = cycle), color = "blue")
hp <- debt_database %>% select(Year, year_mean) %>% head(18)
View(joint_support_scores)
View(debt_database)
img1_path <- "www/comments_about_china_2013.png"
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
attr(img1, "info")
library(png)
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
attr(img1, "info")
library(knitr)
joint_support_scores <- read_csv("joint_support_scores.csv")
debt_database <- read_csv("HRT_ChinaDebtStockDatabase.csv", col_names = TRUE)
debt_database <- debt_database %>% select(1:7)
##boxplot by year
debt_database %>%
ggplot(aes(x=Year, y = ChinaDebt_GDP, na.rm = TRUE)) +
geom_boxplot(aes(group = Year))
quantiles <- debt_database %>%
group_by(Year) %>%
summarise(year_mean = mean(ChinaDebt_GDP, na.rm = TRUE),
year_median = median(ChinaDebt_GDP, na.rm = TRUE),
quantile_25 = quantile(ChinaDebt_GDP, 0.25),
quantile_75 = quantile(ChinaDebt_GDP, 0.75))
hp <- quantiles %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
objectList <- list(debt_hp$x,debt_hp$trend,debt_hp$cycle)
hp <- as.data.frame(do.call(cbind, objectList))
names(hp) <- c("ChinaDebt_GDP","trend","cycle")
hp$year <- 2000:2017
hp %>%
ggplot(aes(x=year)) +
geom_line(aes(y = ChinaDebt_GDP)) +
geom_line(aes(y = trend), color = "red") +
geom_line(aes(y = cycle), color = "blue")
View(hp)
hp <- quantiles %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
library(tidyverse)
library(stargazer)
library(mFilter)
library(plm)
library(lmtest)
library(fuzzyjoin)
joint_support_scores <- read_csv("joint_support_scores.csv")
debt_database <- read_csv("HRT_ChinaDebtStockDatabase.csv", col_names = TRUE)
debt_database <- debt_database %>% select(1:7)
##boxplot by year
debt_database %>%
ggplot(aes(x=Year, y = ChinaDebt_GDP, na.rm = TRUE)) +
geom_boxplot(aes(group = Year))
quantiles <- debt_database %>%
group_by(Year) %>%
summarise(year_mean = mean(ChinaDebt_GDP, na.rm = TRUE),
year_median = median(ChinaDebt_GDP, na.rm = TRUE),
quantile_25 = quantile(ChinaDebt_GDP, 0.25),
quantile_75 = quantile(ChinaDebt_GDP, 0.75))
hp <- quantiles %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
objectList <- list(debt_hp$x,debt_hp$trend,debt_hp$cycle)
hp <- as.data.frame(do.call(cbind, objectList))
names(hp) <- c("ChinaDebt_GDP","trend","cycle")
hp$year <- 2000:2017
hp %>%
ggplot(aes(x=year)) +
geom_line(aes(y = ChinaDebt_GDP)) +
geom_line(aes(y = trend), color = "red") +
geom_line(aes(y = cycle), color = "blue")
long <- joint_support_scores %>% pivot_longer(Supported_13:total_recs_18,
names_to = c("variable", "year"),
names_pattern = "(.+)_(.+$)",
values_to = "values")
long$year <- str_replace_all(long$year, "13", "2012")
long$year <-  str_replace_all(long$year, "18", "2017")
long$year <- as.numeric(long$year)
long$total_recommendations <- NULL
long <-long %>% filter(variable == "support_score" | variable == "total_recs")
distance_china <- read_csv("distance_china.csv")
distance_china$X1 <- NULL
debt_subset <- debt_database %>% filter(Year == 2012|Year == 2017)
debt_subset <- debt_subset %>% left_join(distance_china, by = c("Country" = "country"), ignore_case = TRUE)
##correcting a matching error
debt_subset$distance[debt_subset$Country == "Cote d'Ivoire"] <- 11255
devecon <- read_csv("/Users/sonnetfrisbie/Desktop/Desktop - MacBook Pro/ISDC/R working directory ISDC/DEVECON_fulldataset.csv")
long_join <- debt_subset %>% left_join(long, by = c("Country" = "country", "Year" = "year"))
long_join <- long_join %>%
mutate(time_dummy = if_else(Year == "2017", 1, 0)) %>%
mutate(foreign_debt_gdp = total_foreign_debt/GDP_percapita)
support_df <- long_join %>%
select(Country,
Year, ChinaDebt_GDP, GDP_USDbn, values, time_dummy, variable, distance, total_debt_GDP, foreign_debt_gdp, GDP_percapita) %>%
filter(variable == "support_score")
support_df %>%
select(-Country, -variable, -Year, -values, -time_dummy, -GDP_USDbn) %>%
cor(method = "kendall", use = "complete.obs")
long_join <- debt_subset %>% left_join(long, by = c("Country" = "country", "Year" = "year"))
long_join <- long_join %>%
mutate(time_dummy = if_else(Year == "2017", 1, 0)) %>%
mutate(foreign_debt_gdp = total_foreign_debt/GDP_percapita)
View(long_join)
plot_4 <- finance %>%
group_by(crs_sector_name) %>%
summarise(total = sum(usd_defl_2014, na.rm = TRUE)) %>%
ggplot() +
geom_bar(aes(total, fct_reorder(crs_sector_name, total), fill = total), stat = "identity") +
labs(title = "Total USD commited in development projects per sector", x = "USD deflated to 2014", y = "") +
theme_minimal()
ggplotly(plot_4)
plot_4 <- finance %>%
group_by(crs_sector_name) %>%
summarise(total = sum(usd_defl_2014, na.rm = TRUE)) %>%
ggplot() +
geom_bar(aes(total, fct_reorder(crs_sector_name, total), fill = total), stat = "identity") +
labs(title = "Total USD commited in development projects per sector", x = "USD deflated to 2014", y = "") +
theme_minimal()
library(tidyverse)
library(stargazer)
library(mFilter)
library(plm)
library(lmtest)
library(fuzzyjoin)
joint_support_scores <- read_csv("joint_support_scores.csv")
debt_database <- read_csv("HRT_ChinaDebtStockDatabase.csv", col_names = TRUE)
debt_database <- debt_database %>% select(1:7)
##boxplot by year
debt_database %>%
ggplot(aes(x=Year, y = ChinaDebt_GDP, na.rm = TRUE)) +
geom_boxplot(aes(group = Year))
quantiles <- debt_database %>%
group_by(Year) %>%
summarise(year_mean = mean(ChinaDebt_GDP, na.rm = TRUE),
year_median = median(ChinaDebt_GDP, na.rm = TRUE),
quantile_25 = quantile(ChinaDebt_GDP, 0.25),
quantile_75 = quantile(ChinaDebt_GDP, 0.75))
hp <- quantiles %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
objectList <- list(debt_hp$x,debt_hp$trend,debt_hp$cycle)
hp <- as.data.frame(do.call(cbind, objectList))
names(hp) <- c("ChinaDebt_GDP","trend","cycle")
hp$year <- 2000:2017
hp %>%
ggplot(aes(x=year)) +
geom_line(aes(y = ChinaDebt_GDP)) +
geom_line(aes(y = trend), color = "red") +
geom_line(aes(y = cycle), color = "blue")
long <- joint_support_scores %>% pivot_longer(Supported_13:total_recs_18,
names_to = c("variable", "year"),
names_pattern = "(.+)_(.+$)",
values_to = "values")
long$year <- str_replace_all(long$year, "13", "2012")
long$year <-  str_replace_all(long$year, "18", "2017")
long$year <- as.numeric(long$year)
long$total_recommendations <- NULL
long <-long %>% filter(variable == "support_score" | variable == "total_recs")
distance_china <- read_csv("distance_china.csv")
distance_china$X1 <- NULL
debt_subset <- debt_database %>% filter(Year == 2012|Year == 2017)
debt_subset <- debt_subset %>% left_join(distance_china, by = c("Country" = "country"), ignore_case = TRUE)
##correcting a matching error
debt_subset$distance[debt_subset$Country == "Cote d'Ivoire"] <- 11255
devecon <- read_csv("/Users/sonnetfrisbie/Desktop/Desktop - MacBook Pro/ISDC/R working directory ISDC/DEVECON_fulldataset.csv")
long_join <- debt_subset %>% left_join(long, by = c("Country" = "country", "Year" = "year"))
long_join <- long_join %>%
mutate(time_dummy = if_else(Year == "2017", 1, 0)) %>%
mutate(foreign_debt_gdp = total_foreign_debt/GDP_percapita)
library(tidyverse)
library(stargazer)
library(mFilter)
library(plm)
library(lmtest)
library(fuzzyjoin)
joint_support_scores <- read_csv("joint_support_scores.csv")
debt_database <- read_csv("HRT_ChinaDebtStockDatabase.csv", col_names = TRUE)
debt_database <- debt_database %>% select(1:7)
##boxplot by year
debt_database %>%
ggplot(aes(x=Year, y = ChinaDebt_GDP, na.rm = TRUE)) +
geom_boxplot(aes(group = Year))
quantiles <- debt_database %>%
group_by(Year) %>%
summarise(year_mean = mean(ChinaDebt_GDP, na.rm = TRUE),
year_median = median(ChinaDebt_GDP, na.rm = TRUE),
quantile_25 = quantile(ChinaDebt_GDP, 0.25),
quantile_75 = quantile(ChinaDebt_GDP, 0.75))
hp <- quantiles %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
objectList <- list(debt_hp$x,debt_hp$trend,debt_hp$cycle)
hp <- as.data.frame(do.call(cbind, objectList))
names(hp) <- c("ChinaDebt_GDP","trend","cycle")
hp$year <- 2000:2017
hp %>%
ggplot(aes(x=year)) +
geom_line(aes(y = ChinaDebt_GDP)) +
geom_line(aes(y = trend), color = "red") +
geom_line(aes(y = cycle), color = "blue")
print(quantiles)
long <- joint_support_scores %>% pivot_longer(Supported_13:total_recs_18,
names_to = c("variable", "year"),
names_pattern = "(.+)_(.+$)",
values_to = "values")
long$year <- str_replace_all(long$year, "13", "2012")
long$year <-  str_replace_all(long$year, "18", "2017")
long$year <- as.numeric(long$year)
long$total_recommendations <- NULL
long <-long %>% filter(variable == "support_score" | variable == "total_recs")
distance_china <- read_csv("distance_china.csv")
distance_china$X1 <- NULL
debt_subset <- debt_database %>% filter(Year == 2012|Year == 2017)
debt_subset <- debt_subset %>% left_join(distance_china, by = c("Country" = "country"), ignore_case = TRUE)
##correcting a matching error
debt_subset$distance[debt_subset$Country == "Cote d'Ivoire"] <- 11255
devecon <- read_csv("/Users/sonnetfrisbie/Desktop/Desktop - MacBook Pro/ISDC/R working directory ISDC/DEVECON_fulldataset.csv")
controls <- devecon %>%
select(iso, year, EIU_TDBT, EIU_TDPY, WB_ny_gdp_pcap_cd) %>%
filter(year == 2012|year == 2017) %>%
rename("total_foreign_debt" = "EIU_TDBT",
"total_debt_GDP" = "EIU_TDPY",
"GDP_percapita" = "WB_ny_gdp_pcap_cd")
joint_support_scores <- read_csv("joint_support_scores.csv")
debt_database <- read_csv("HRT_ChinaDebtStockDatabase.csv", col_names = TRUE)
debt_database <- debt_database %>% select(1:7)
controls <- read_csv("controls.csv")
##boxplot by year
debt_database %>%
ggplot(aes(x=Year, y = ChinaDebt_GDP, na.rm = TRUE)) +
geom_boxplot(aes(group = Year))
quantiles <- debt_database %>%
group_by(Year) %>%
summarise(year_mean = mean(ChinaDebt_GDP, na.rm = TRUE),
year_median = median(ChinaDebt_GDP, na.rm = TRUE),
quantile_25 = quantile(ChinaDebt_GDP, 0.25),
quantile_75 = quantile(ChinaDebt_GDP, 0.75))
print(quantiles)
hp <- quantiles %>% select(Year, year_mean) %>% head(18)
debt_hp <- hpfilter(hp$year_mean, type = c("lambda"), freq = 1)
objectList <- list(debt_hp$x,debt_hp$trend,debt_hp$cycle)
hp <- as.data.frame(do.call(cbind, objectList))
names(hp) <- c("ChinaDebt_GDP","trend","cycle")
hp$year <- 2000:2017
hp %>%
ggplot(aes(x=year)) +
geom_line(aes(y = ChinaDebt_GDP)) +
geom_line(aes(y = trend), color = "red") +
geom_line(aes(y = cycle), color = "blue")
long <- joint_support_scores %>% pivot_longer(Supported_13:total_recs_18,
names_to = c("variable", "year"),
names_pattern = "(.+)_(.+$)",
values_to = "values")
long$year <- str_replace_all(long$year, "13", "2012")
long$year <-  str_replace_all(long$year, "18", "2017")
long$year <- as.numeric(long$year)
long$total_recommendations <- NULL
long <-long %>% filter(variable == "support_score" | variable == "total_recs")
distance_china <- read_csv("distance_china.csv")
distance_china$X1 <- NULL
debt_subset <- debt_database %>% filter(Year == 2012|Year == 2017)
debt_subset <- debt_subset %>% left_join(distance_china, by = c("Country" = "country"), ignore_case = TRUE)
##correcting a matching error
debt_subset$distance[debt_subset$Country == "Cote d'Ivoire"] <- 11255
debt_subset <- debt_subset %>% left_join(controls, by = c("ISO" = "iso", "Year" = "year"))
long_join <- debt_subset %>% left_join(long, by = c("Country" = "country", "Year" = "year"))
long_join <- long_join %>%
mutate(time_dummy = if_else(Year == "2017", 1, 0)) %>%
mutate(foreign_debt_gdp = total_foreign_debt/GDP_percapita)
support_df <- long_join %>%
select(Country,
Year, ChinaDebt_GDP, GDP_USDbn, values, time_dummy, variable, distance, total_debt_GDP, foreign_debt_gdp, GDP_percapita) %>%
filter(variable == "support_score")
support_df %>%
select(-Country, -variable, -Year, -values, -time_dummy, -GDP_USDbn) %>%
cor(method = "kendall", use = "complete.obs")
ols <- lm(values ~ ChinaDebt_GDP, data = support_df)
diff_and_diff_fe <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1) + factor(Country) - 1, data = support_df)
diff_and_diff_1 <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1), data = support_df)
diff_and_diff_2 <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1) + distance, data = support_df)
diff_and_diff_3 <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1) + distance + foreign_debt_gdp, data = support_df)
stargazer(diff_and_diff_1, diff_and_diff_2, diff_and_diff_3, type='text', dep.var.labels = c("Level of Support from Recommendations"), out = "diff_and_diff_support.txt", title = "Diff and Diff--Support Scores with Controls" )
stargazer(diff_and_diff_fe, type='text', header=FALSE)
stargazer(ols, type='text', header=FALSE)
stargazer(diff_and_diff, type = "text", header = FALSE)
support_df %>%
drop_na(values) %>%
ggplot(aes(x = log(ChinaDebt_GDP+1), y = values)) +
geom_point(aes(color = factor(Year))) +
geom_smooth(method = "lm", aes(group = factor(Year), color = factor(Year)), se = FALSE, show.legend = TRUE) +
labs(title = "Relationship between support and debt to China, by Year of UPR", x = "log debt to China, pct of GDP") +
theme(legend.title = element_blank())
recs_df <- long_join %>%
select(Country,
Year, ChinaDebt_GDP, GDP_USDbn, values, time_dummy, variable, distance, total_debt_GDP, foreign_debt_gdp, GDP_percapita) %>%
filter(variable == "total_recs")
recs_df %>%
drop_na(values) %>%
ggplot(aes(x = log(ChinaDebt_GDP+1), y = values)) +
geom_point(aes(color = factor(Year))) +
geom_smooth(method = "lm", aes(group = factor(Year), color = factor(Year)), se = FALSE, show.legend = TRUE) +
labs(title = "Relationship between total comments and debt to China, by Year of UPR", x = "log debt to China, pct of GDP") +
theme(legend.title = element_blank())
ols_1 <- lm(values ~ log(ChinaDebt_GDP+1) , data = recs_df)
ols_2 <- lm(values ~ log(ChinaDebt_GDP+1) + distance, data = recs_df)
ols_3 <- lm(values ~ log(ChinaDebt_GDP+1) + distance + foreign_debt_gdp, data = recs_df)
ols_4 <- lm(values ~ log(ChinaDebt_GDP+1) + distance + foreign_debt_gdp + GDP_percapita, data = recs_df)
stargazer(ols_1, ols_2, ols_3, ols_4, type='text', dep.var.labels = c("total comments"), out = "ols_comments.txt", title = "OLS--Total Comments with Controls" )
diff_and_diff_fe <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1) + factor(Country) - 1, data = recs_df)
diff_and_diff_1 <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1), data = recs_df)
diff_and_diff_2 <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1) + distance, data = recs_df)
diff_and_diff_3 <- lm(values ~ time_dummy*log(ChinaDebt_GDP+1) + distance + foreign_debt_gdp, data = recs_df)
stargazer(diff_and_diff_1, diff_and_diff_2, diff_and_diff_3, type='text', dep.var.labels = c("total comments"), out = "diff_and_diff_comments.txt", title = "Diff and Diff--Total Comments with Controls" )
stargazer(diff_and_diff_fe, type='text', header=FALSE)
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
