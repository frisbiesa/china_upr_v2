summarise(promedio = mean(acceso_x100hab)) %>%
ggplot() +
geom_line(aes(anio, promedio, color = provincia), size = 1.2)+
gghighlight(provincia == "Tierra Del Fuego", unhighlighted_params = list(size = 0.75), label_params = list(vjust =-1.5)) +
scale_x_continuous(breaks = 2014:2020) +
labs(y = "Internet access per 100 habitants", x = "Year", title = "Internet access") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(eph)
base <- get_microdata(year = 2004:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES'),
destfile = "base_2018_2019.rds") %>%
organize_labels(., type='individual')
View(base)
base <- get_microdata(year = 2004:2019,
trimester = 1,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES'),
destfile = "base_2018_2019.rds") %>%
organize_labels(., type='individual')
View(base)
base %>%
select(microdata) %>%
unnest(microdata)
base <- get_microdata(year = 2004:2019,
trimester = 1,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES'),
destfile = "base_2004_2019.rds") %>%
organize_labels(., type='individual')
base %>%
select(microdata) %>%
unnest(microdata)
base %>%
select(microdata) %>%
unnest(microdata)
base %>%
select(microdata) %>%
unnest(microdata)
View(base)
base <- get_microdata(year = 2004:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES'),
destfile = "base_2004_2019.rds") %>%
organize_labels(., type='individual')
base <- get_microdata(year = 2004:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES'),
destfile = "base_2004_2019.rds") %>%
organize_labels(., type='individual')
base %>%
select(microdata) %>%
unnest(microdata)
base <- get_microdata(year = 2004:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES'),
destfile = "base_2004_2019.rds") %>%
organize_labels(., type='individual')
View(base)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(eph)
base <- get_microdata(year = 2004:2019,
trimester = 1:4,
type='individual', destfile = 'bases_eph.rds')
base_org <- organize_labels(base, type = 'individual')
pool <- organize_panels(bases=base$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B_CAES', 'CH15', 'CH15_Cod'), window='anual')
pool <- organize_panels(bases=base_org$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B_CAES', 'CH15', 'CH15_Cod'), window='anual')
lista_bases <- list(toybase_individual_2016_03,toybase_individual_2016_04)
lista_bases <- list(toybase_individual_2016_03,toybase_individual_2016_04)
lista_bases <- list(toybase_individual_2016_03,toybase_individual_2016_04)
pool <- organize_panels(bases=base_org$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B_CAES', 'CH15', 'CH15_Cod'), window='anual')
gc()
pool <- organize_panels(bases=base_org$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B_CAES', 'CH15', 'CH15_Cod'), window='anual')
?organize_panels
?organize_panels
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(eph)
base <- get_microdata(year = 2004:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_COD'),
destfile = "base_2004_2019.rds") %>%
organize_labels(., type='individual')
pool <- organize_panels(bases=base$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B_COD', 'CH15', 'CH15_Cod'), window='anual')
base <- get_microdata(year = 2005:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_COD')) %>%
organize_labels(., type='individual')
base <- get_microdata(year = 2005:2019,
trimester = 1:4,
type='individual',
vars =c('ANO4', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_COD')) %>%
organize_labels(., type='individual')
base %>%
select(microdata) %>%
unnest(microdata)
base %>%
select(microdata) %>%
unnest(microdata)
base <- get_microdata(year = 2010:2019,
trimester = 1:4,
type='individual',
vars =c('ANO4', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_COD')) %>%
organize_labels(., type='individual')
?connections
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(eph)
base <- get_microdata(year = 2010:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06', 'CH15', 'CH15_Cod',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_COD')) %>%
organize_labels(., type='individual')
base <- get_microdata(year = 2010:2019,
trimester = 1:4,
type='individual') %>%
organize_labels(., type='individual')
base %>%
select(microdata) %>%
unnest(microdata)
pool <- organize_panels(bases=base$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B_COD', 'CH15', 'CH15_Cod'), window='anual')
base <- get_microdata(year = 2010:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO')) %>%
organize_labels(., type='individual')
pool <- organize_panels(bases=base$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO'), window='anual')
pool_tdf <- pool %>%
filter(AGLOMERADO == 31)
## esta complicado el tema
pool_tdf %>%
group_by(ANO4) %>%
summarise(univ_publico = sum(PONDERA[PP04A==1 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE)) %>%
ggplot +
geom_line(aes(ANO4, univ_publico), stat = "identity")
## esta complicado el tema
pool_tdf %>%
group_by(ANO4) %>%
summarise(univ_publico = sum(PONDERA[PP04A==1 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE), pop = sum(PONDERA), ocup = sum(PONDERA[ESTADO == 1]), tasa_ocup = ocup/pop) %>%
ggplot +
geom_line(aes(ANO4, univ_publico), stat = "identity") +
geom_line(aes(ANO4, tasa_ocup), stat = "identity")
## esta complicado el tema
pool_tdf %>%
group_by(ANO4) %>%
summarise(univ_publico = sum(PONDERA[PP04A==1 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE), pop = sum(PONDERA), ocup = sum(PONDERA[ESTADO == 1]), tasa_ocup = ocup/pop, univ_privado = sum(PONDERA[PP04A==2 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==2 & NIVEL_ED == 6], na.rm = TRUE)) %>%
ggplot +
geom_line(aes(ANO4, univ_publico), stat = "identity") +
geom_line(aes(ANO4, univ_privado), stat = "identity")
## esta complicado el tema
pool_tdf %>%
group_by(ANO4) %>%
summarise(univ_publico = sum(PONDERA[PP04A==1 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE), pop = sum(PONDERA), ocup = sum(PONDERA[ESTADO == 1]), tasa_ocup = ocup/pop, univ_privado = sum(PONDERA[PP04A==2 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==2 & NIVEL_ED == 6], na.rm = TRUE)) %>%
ggplot +
geom_line(aes(ANO4, univ_privado), stat = "identity")
trabajo <- pool_tdf %>%
group_by(ANO4) %>%
summarise(univ_publico = sum(PONDERA[PP04A==1 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE),
pop = sum(PONDERA), ocup = sum(PONDERA[ESTADO == 1]),
tasa_ocup = ocup/pop,
univ_privado = sum(PONDERA[PP04A==2 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==2 & NIVEL_ED == 6], na.rm = TRUE))
View(trabajo)
## esta complicado el tema
trabajo <- pool_tdf %>%
group_by(ANO4) %>%
summarise(univ_publico = sum(PONDERA[PP04A==1 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE),
pop = sum(PONDERA), ocup = sum(PONDERA[ESTADO == 1]),
tasa_ocup = ocup/pop,
univ_privado = sum(PONDERA[PP04A==2 & NIVEL_ED == 6], na.rm = TRUE)/sum(PONDERA[ESTADO==1 & NIVEL_ED == 6], na.rm = TRUE))
pool_tdf %>%
group_by(ANO4, PP04A, NIVEL_ED) %>%
summarise(total = sum(PONDERA[NIVEL_ED == 6]))
pool_tdf %>%
group_by(ANO4) %>%
summarise(total = sum(PONDERA[NIVEL_ED == 6]))
pool_tdf %>%
group_by(ANO4) %>%
summarise(total_priv =  sum(PONDERA[PP04A == 2]),
univ_priv = sum(PONDERA[NIVEL_ED == 6 & PP04A == 2]),
tasa = univ_priv/total_priv)
pool_tdf %>%
group_by(ANO4) %>%
summarise(total_priv =  sum(PONDERA[PP04A == 2], na.rm = TRUE),
univ_priv = sum(PONDERA[NIVEL_ED == 6 & PP04A == 2], na.rm = TRUE),
tasa = univ_priv/total_priv)
base <- get_microdata(year = 2008:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B COD')) %>%
organize_labels(., type='individual')
pool <- organize_panels(bases=base$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B COD'), window='anual')
base <- get_microdata(year = 2008:2019,
trimester = 1:4,
type='individual',
vars =c('CODUSU','NRO_HOGAR','COMPONENTE','ANO4',
'TRIMESTRE','CH04','CH06',
'PONDERA','ESTADO','PP04A',
'NIVEL_ED','AGLOMERADO', 'PP04B_CAES')) %>%
organize_labels(., type='individual')
pool <- organize_panels(bases=base$microdata, variables=c('PONDERA','ESTADO','PP04A', 'NIVEL_ED', 'AGLOMERADO', 'PP04B COD'), window='anual')
individual
toybase_individual_2016_03
git lfs install
write_sf(mex_muns, "Muni_2012gw.shp")
library(sf)
write_sf(mex_muns, "Muni_2012gw.shp")
mex_muns$MUN_ID <- str_c(mex_muns$CVE_ENT, mex_muns$CVE_MUN)
library(tidyverse)
library(jsonlite)
library(sf)
mexico_eci <- read.csv("ECI.csv")
library(tidyverse)
library(jsonlite)
library(httr)
library(sf)
mexico_eci <- read.csv("ECI.csv")
mexico_eci <- mexico_eci %>%
rename(mun_id = 1, eci = 2, municipality = 3)
mexico_eci <- mexico_eci %>%
mutate(mun_id = str_pad(mun_id, width = 5, pad = "0"))
write.csv(mexico_eci, "eci2.csv")
mex_muns <- read_sf("Muni_2012gw.shp")
mex_muns$MUN_ID <- str_c(mex_muns$CVE_ENT, mex_muns$CVE_MUN)
write_sf(mex_muns, "Muni_2012gw.shp")
library(tidyverse)
library(jsonlite)
library(httr)
library(sf)
mexico_eci <- read.csv("ECI.csv")
mexico_eci <- mexico_eci %>%
rename(mun_id = 1, eci = 2, municipality = 3)
mexico_eci <- mexico_eci %>%
mutate(mun_id = str_pad(mun_id, width = 5, pad = "0"))
write.csv(mexico_eci, "eci2.csv")
mex_muns <- read_sf("Muni_2012gw.shp")
mex_muns$MUN_ID <- str_c(mex_muns$CVE_ENT, mex_muns$CVE_MUN)
write_sf(mex_muns, "Muni_2012gw.shp")
library(tidyverse)
library(shiny)
install.packages("digest")
install.packages("digest")
library(digest)
library(shiny)
library(shiny)
uninstall.package(digest)
uninstall.packages(digest)
remove.packages(digest)
remove.packages(digest)
remove.packages("digest")
devtools::install("digest")
install.packages("digest")
install.packages("digest")
remove.packages("digest")
install.packages(c("anytime", "attempt", "backports", "bayesplot", "BH", "bibtex", "bit", "bit64", "bookdown", "broom", "callr", "car", "carData", "choroplethr", "chron", "cli", "clipr", "coda", "colorspace", "colourpicker", "covr", "cowplot", "cpp11", "crayon", "crosstalk", "DBI", "dbplyr", "devtools", "dials", "dplyr", "DT", "e1071", "ellipsis", "ergm", "expss", "fansi", "fastmap", "flexmix", "forcats", "foreach", "Formula", "fredr", "fs", "furrr", "future", "gdtools", "generics", "gganimate", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggridges", "gh", "git2r", "globals", "glue", "gmp", "gower", "hardhat", "haven", "hexbin", "hipread", "Hmisc", "hms", "htmlTable", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "infer", "inline", "insight", "ipumsr", "isoband", "ISOcodes", "iterators", "janitor", "jsonlite", "jtools", "knitr", "labeling", "labelled", "Lahman", "later", "lava", "leaflet", "lhs", "lme4", "lmtest", "loo", "lubridate", "magick", "magrittr", "maptools", "margins", "MatchIt", "matrixStats", "maxLik", "memisc", "memoise", "modelr", "naniar", "network", "nloptr", "openssl", "openxlsx", "parsnip", "patchwork", "pbkrtest", "permutations", "pillar", "pkgbuild", "pkgload", "plm", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "R6", "rappdirs", "raster", "Rcpp", "RcppEigen", "RcppParallel", "Rdpack", "recipes", "rematch2", "remotes", "repr", "reprex", "reshape2", "rex", "rgdal", "rgeos", "rlang", "rmarkdown", "RMySQL", "robustbase", "roxygen2", "rprojroot", "rsample", "RSQLite", "rstan", "rstanarm", "rstantools", "rstatix", "rstudioapi", "rversions", "rvest", "sampling", "sandwich", "sf", "shinyjs", "shinythemes", "sjlabelled", "sp", "SQUAREM", "StanHeaders", "statar", "statmod", "statnet.common", "stopwords", "stringi", "sys", "systemfonts", "testthat", "tibble", "tidycensus", "tidymodels", "tidyposterior", "tidypredict", "tidyr", "tidytext", "tigris", "tinytex", "tune", "units", "usethis", "vctrs", "vroom", "WDI", "withr", "workflows", "writexl", "xfun", "xml2", "xts", "yardstick", "zip", "zoo"))
library(shiny)
library(tidyverse)
library(dplyr)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
llibrary(dplyr)
library(dplyr)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
update.packages(ask = FALSE)
use warnings()
warnings()
library(tidyverse)
shiny::runApp('C:/Users/nico/Desktop/Harris/Winter 2021/Data Programming II/Fortunato-Frisbie-final-project')
install.packages("devtools")
runApp('C:/Users/nico/Desktop/Harris/Winter 2021/Data Programming II/Fortunato-Frisbie-final-project')
setwd("C:/Users/nico/Desktop/Harris/Winter 2021/Data Programming II/Fortunato-Frisbie-final-project")
runApp()
setwd("C:/Users/nico/Desktop/Harris/Winter 2021/Data Programming II/Fortunato-Frisbie-final-project")
runApp()
debt_stock <- read.csv("debt_stock_china.csv") %>%
select(-country_code, -ISO)
worlde <- world %>%
rename(country = name_long)
mapamundi <- left_join(worlde, debt_stock, by = "country")
mapamundi$debt_usd <- str_remove_all(mapamundi$debt_usd, ",")
mapamundi$debt_usd <- as.numeric(mapamundi$debt_usd)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Evolution of sovereign debt to China",
tags$style('head { face: bold }'))
)
),
fluidRow(
column(width = 6,
align = "center",
sliderInput(inputId = "date",
label = "Date:",
min = 2000 ,
max = 2017,
value = 2000)
)
,
column(width = 6,
selectInput(inputId = "fill",
label = "select variable",
c("aggregate debt" = "debt_usd",
"debt to GDP" = "china_debt_gdp"))
),
fluidRow(
column(width = 12,
align = "center",
plotlyOutput("map",
width = "100%")
)
)
)
)
library(plotly)
install.packages("plotly")
install.packages("plotly")
install.packages("shinyWidgets")
library(shinyWidgets)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Evolution of sovereign debt to China",
tags$style('head { face: bold }'))
)
),
fluidRow(
column(width = 6,
align = "center",
sliderInput(inputId = "date",
label = "Date:",
min = 2000 ,
max = 2017,
value = 2000)
)
,
column(width = 6,
selectInput(inputId = "fill",
label = "select variable",
c("aggregate debt" = "debt_usd",
"debt to GDP" = "china_debt_gdp"))
),
fluidRow(
column(width = 12,
align = "center",
plotlyOutput("map",
width = "100%")
)
)
)
)
server <- function(input, output) {
data <- reactive({
mapamundi %>%
filter(year == input$date) %>%
rename(graph_variable = input$fill)
})
scale <- reactive({
if (input$fill == "debt_usd"){
s <- c(1, 200000000)
}
else if (input$fill == "china_debt_gdp"){
s <- c(1, 30)
}
})
plot <- reactive({
plt <- ggplot() +
geom_sf(data = world) +
geom_sf(data = data(),
aes(group = year, fill = graph_variable),
alpha = 3/5) +
labs(title = "",
fill = "",
caption = 'Source: "China’s Overseas Lending," NBER, Sebastian Horn, Carmen M. Reinhart & Christoph Trebesch') +
scale_fill_viridis_c(option = "magma", limits = scale()) +
theme_minimal() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
plot.caption = element_text(size = 12))+
guides(color = FALSE, alpha = FALSE,
fill = guide_colorbar(barwidth = 0.5,
barheight = 10, title.position = "left",
title.theme = element_text(angle = 90),
title.hjust = .5))
plt <- ggplotly(plt, tooltip= c("country", "fill"))
})
output$map <- renderPlotly({plot()})
}
shinyApp(ui = ui, server = server)
mapamundi <- left_join(worlde, debt_stock, by = "country")
mapamundi$debt_usd <- str_remove_all(mapamundi$debt_usd, ",")
mapamundi$debt_usd <- as.numeric(mapamundi$debt_usd)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Evolution of sovereign debt to China",
tags$style('head { face: bold }'))
)
),
fluidRow(
column(width = 6,
align = "center",
sliderInput(inputId = "date",
label = "Date:",
min = 2000 ,
max = 2017,
value = 2000)
)
,
column(width = 6,
selectInput(inputId = "fill",
label = "select variable",
c("aggregate debt" = "debt_usd",
"debt to GDP" = "china_debt_gdp"))
),
fluidRow(
column(width = 12,
align = "center",
plotlyOutput("map",
width = "100%")
)
)
)
)
server <- function(input, output) {
data <- reactive({
mapamundi %>%
filter(year == input$date) %>%
rename(graph_variable = input$fill)
})
scale <- reactive({
if (input$fill == "debt_usd"){
s <- c(1, 200000000)
}
else if (input$fill == "china_debt_gdp"){
s <- c(1, 30)
}
})
plot <- reactive({
plt <- ggplot() +
geom_sf(data = world) +
geom_sf(data = data(),
aes(group = year, fill = graph_variable),
alpha = 3/5) +
labs(title = "",
fill = "",
caption = 'Source: "China’s Overseas Lending," NBER, Sebastian Horn, Carmen M. Reinhart & Christoph Trebesch') +
scale_fill_viridis_c(option = "magma", limits = scale()) +
theme_minimal() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
plot.caption = element_text(size = 12))+
guides(color = FALSE, alpha = FALSE,
fill = guide_colorbar(barwidth = 0.5,
barheight = 10, title.position = "left",
title.theme = element_text(angle = 90),
title.hjust = .5))
plt <- ggplotly(plt, tooltip= c("country", "fill"))
})
output$map <- renderPlotly({plot()})
}
shinyApp(ui = ui, server = server)
